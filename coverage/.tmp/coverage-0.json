{"D:/sophra/src/lib/shared/logger/src/logger.ts":{"path":"D:/sophra/src/lib/shared/logger/src/logger.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":27,"column":1}},"1":{"start":{"line":6,"column":24},"end":{"line":25,"column":3}},"2":{"start":{"line":7,"column":26},"end":{"line":7,"column":49}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":36}},"4":{"start":{"line":9,"column":24},"end":{"line":9,"column":53}},"5":{"start":{"line":10,"column":27},"end":{"line":10,"column":59}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":34}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":55}},"8":{"start":{"line":13,"column":4},"end":{"line":24,"column":7}},"9":{"start":{"line":26,"column":2},"end":{"line":26,"column":18}},"10":{"start":{"line":28,"column":19},"end":{"line":39,"column":1}},"11":{"start":{"line":40,"column":19},"end":{"line":51,"column":1}},"12":{"start":{"line":52,"column":28},"end":{"line":88,"column":1}},"13":{"start":{"line":53,"column":21},"end":{"line":53,"column":28}},"14":{"start":{"line":54,"column":20},"end":{"line":71,"column":3}},"15":{"start":{"line":55,"column":19},"end":{"line":66,"column":5}},"16":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"17":{"start":{"line":68,"column":6},"end":{"line":68,"column":18}},"18":{"start":{"line":70,"column":4},"end":{"line":70,"column":49}},"19":{"start":{"line":72,"column":24},"end":{"line":86,"column":3}},"20":{"start":{"line":73,"column":24},"end":{"line":73,"column":98}},"21":{"start":{"line":74,"column":23},"end":{"line":74,"column":94}},"22":{"start":{"line":75,"column":23},"end":{"line":75,"column":94}},"23":{"start":{"line":76,"column":24},"end":{"line":76,"column":98}},"24":{"start":{"line":77,"column":23},"end":{"line":77,"column":93}},"25":{"start":{"line":78,"column":26},"end":{"line":78,"column":102}},"26":{"start":{"line":81,"column":6},"end":{"line":81,"column":26}},"27":{"start":{"line":84,"column":6},"end":{"line":84,"column":30}},"28":{"start":{"line":87,"column":2},"end":{"line":87,"column":23}},"29":{"start":{"line":89,"column":27},"end":{"line":89,"column":31}},"30":{"start":{"line":91,"column":14},"end":{"line":91,"column":25}},"31":{"start":{"line":92,"column":2},"end":{"line":92,"column":31}},"32":{"start":{"line":93,"column":16},"end":{"line":93,"column":44}},"33":{"start":{"line":94,"column":21},"end":{"line":96,"column":4}},"34":{"start":{"line":95,"column":4},"end":{"line":95,"column":138}},"35":{"start":{"line":97,"column":2},"end":{"line":97,"column":35}},"36":{"start":{"line":97,"column":19},"end":{"line":97,"column":35}},"37":{"start":{"line":98,"column":16},"end":{"line":98,"column":93}},"38":{"start":{"line":99,"column":2},"end":{"line":99,"column":31}},"39":{"start":{"line":99,"column":14},"end":{"line":99,"column":31}},"40":{"start":{"line":100,"column":19},"end":{"line":100,"column":27}},"41":{"start":{"line":101,"column":2},"end":{"line":108,"column":3}},"42":{"start":{"line":102,"column":21},"end":{"line":104,"column":5}},"43":{"start":{"line":105,"column":4},"end":{"line":107,"column":5}},"44":{"start":{"line":106,"column":6},"end":{"line":106,"column":67}},"45":{"start":{"line":109,"column":22},"end":{"line":109,"column":35}},"46":{"start":{"line":110,"column":23},"end":{"line":110,"column":59}},"47":{"start":{"line":111,"column":2},"end":{"line":111,"column":186}},"48":{"start":{"line":114,"column":24},"end":{"line":114,"column":52}},"49":{"start":{"line":115,"column":2},"end":{"line":117,"column":3}},"50":{"start":{"line":116,"column":4},"end":{"line":116,"column":46}},"51":{"start":{"line":118,"column":2},"end":{"line":166,"column":3}},"52":{"start":{"line":119,"column":19},"end":{"line":124,"column":5}},"53":{"start":{"line":125,"column":23},"end":{"line":145,"column":5}},"54":{"start":{"line":132,"column":32},"end":{"line":132,"column":66}},"55":{"start":{"line":133,"column":28},"end":{"line":133,"column":71}},"56":{"start":{"line":134,"column":25},"end":{"line":136,"column":36}},"57":{"start":{"line":137,"column":27},"end":{"line":137,"column":49}},"58":{"start":{"line":138,"column":75},"end":{"line":138,"column":83}},"59":{"start":{"line":139,"column":34},"end":{"line":139,"column":110}},"60":{"start":{"line":140,"column":14},"end":{"line":140,"column":83}},"61":{"start":{"line":146,"column":4},"end":{"line":149,"column":5}},"62":{"start":{"line":147,"column":22},"end":{"line":147,"column":60}},"63":{"start":{"line":148,"column":6},"end":{"line":148,"column":53}},"64":{"start":{"line":150,"column":4},"end":{"line":164,"column":7}},"65":{"start":{"line":165,"column":4},"end":{"line":165,"column":50}},"66":{"start":{"line":167,"column":2},"end":{"line":169,"column":3}},"67":{"start":{"line":168,"column":4},"end":{"line":168,"column":46}},"68":{"start":{"line":170,"column":22},"end":{"line":173,"column":4}},"69":{"start":{"line":174,"column":2},"end":{"line":174,"column":53}},"70":{"start":{"line":175,"column":2},"end":{"line":175,"column":21}},"71":{"start":{"line":177,"column":22},"end":{"line":177,"column":33}},"72":{"start":{"line":179,"column":38},"end":{"line":191,"column":18}},"73":{"start":{"line":180,"column":2},"end":{"line":180,"column":31}},"74":{"start":{"line":181,"column":2},"end":{"line":181,"column":29}},"75":{"start":{"line":182,"column":2},"end":{"line":182,"column":29}},"76":{"start":{"line":183,"column":2},"end":{"line":183,"column":31}},"77":{"start":{"line":184,"column":2},"end":{"line":184,"column":29}},"78":{"start":{"line":185,"column":2},"end":{"line":185,"column":35}},"79":{"start":{"line":186,"column":2},"end":{"line":186,"column":31}},"80":{"start":{"line":187,"column":2},"end":{"line":187,"column":29}},"81":{"start":{"line":188,"column":2},"end":{"line":188,"column":33}},"82":{"start":{"line":189,"column":2},"end":{"line":189,"column":31}},"83":{"start":{"line":190,"column":2},"end":{"line":190,"column":19}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":24},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":36},"end":{"line":25,"column":3}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":52,"column":28},"end":{"line":52,"column":29}},"loc":{"start":{"line":52,"column":43},"end":{"line":88,"column":1}},"line":52},"2":{"name":"(anonymous_2)","decl":{"start":{"line":54,"column":20},"end":{"line":54,"column":21}},"loc":{"start":{"line":54,"column":31},"end":{"line":71,"column":3}},"line":54},"3":{"name":"(anonymous_3)","decl":{"start":{"line":73,"column":11},"end":{"line":73,"column":12}},"loc":{"start":{"line":73,"column":24},"end":{"line":73,"column":98}},"line":73},"4":{"name":"(anonymous_4)","decl":{"start":{"line":74,"column":10},"end":{"line":74,"column":11}},"loc":{"start":{"line":74,"column":23},"end":{"line":74,"column":94}},"line":74},"5":{"name":"(anonymous_5)","decl":{"start":{"line":75,"column":10},"end":{"line":75,"column":11}},"loc":{"start":{"line":75,"column":23},"end":{"line":75,"column":94}},"line":75},"6":{"name":"(anonymous_6)","decl":{"start":{"line":76,"column":11},"end":{"line":76,"column":12}},"loc":{"start":{"line":76,"column":24},"end":{"line":76,"column":98}},"line":76},"7":{"name":"(anonymous_7)","decl":{"start":{"line":77,"column":10},"end":{"line":77,"column":11}},"loc":{"start":{"line":77,"column":23},"end":{"line":77,"column":93}},"line":77},"8":{"name":"(anonymous_8)","decl":{"start":{"line":78,"column":13},"end":{"line":78,"column":14}},"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":102}},"line":78},"9":{"name":"(anonymous_9)","decl":{"start":{"line":80,"column":4},"end":{"line":80,"column":5}},"loc":{"start":{"line":80,"column":16},"end":{"line":82,"column":5}},"line":80},"10":{"name":"(anonymous_10)","decl":{"start":{"line":83,"column":4},"end":{"line":83,"column":5}},"loc":{"start":{"line":83,"column":24},"end":{"line":85,"column":5}},"line":83},"11":{"name":"getCallerFile","decl":{"start":{"line":90,"column":9},"end":{"line":90,"column":22}},"loc":{"start":{"line":90,"column":25},"end":{"line":112,"column":1}},"line":90},"12":{"name":"(anonymous_12)","decl":{"start":{"line":94,"column":32},"end":{"line":94,"column":33}},"loc":{"start":{"line":94,"column":42},"end":{"line":96,"column":3}},"line":94},"13":{"name":"getLogger","decl":{"start":{"line":113,"column":16},"end":{"line":113,"column":25}},"loc":{"start":{"line":113,"column":37},"end":{"line":176,"column":1}},"line":113},"14":{"name":"(anonymous_14)","decl":{"start":{"line":131,"column":12},"end":{"line":131,"column":13}},"loc":{"start":{"line":131,"column":83},"end":{"line":141,"column":13}},"line":131},"15":{"name":"(anonymous_15)","decl":{"start":{"line":179,"column":39},"end":{"line":179,"column":40}},"loc":{"start":{"line":179,"column":54},"end":{"line":191,"column":1}},"line":179}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":0},"end":{"line":27,"column":1}},"type":"if","locations":[{"start":{"line":5,"column":0},"end":{"line":27,"column":1}},{"start":{},"end":{}}],"line":5},"1":{"loc":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},{"start":{},"end":{}}],"line":67},"2":{"loc":{"start":{"line":67,"column":8},"end":{"line":67,"column":55}},"type":"binary-expr","locations":[{"start":{"line":67,"column":8},"end":{"line":67,"column":26}},{"start":{"line":67,"column":30},"end":{"line":67,"column":55}}],"line":67},"3":{"loc":{"start":{"line":73,"column":24},"end":{"line":73,"column":98}},"type":"binary-expr","locations":[{"start":{"line":73,"column":24},"end":{"line":73,"column":54}},{"start":{"line":73,"column":58},"end":{"line":73,"column":98}}],"line":73},"4":{"loc":{"start":{"line":74,"column":23},"end":{"line":74,"column":94}},"type":"binary-expr","locations":[{"start":{"line":74,"column":23},"end":{"line":74,"column":51}},{"start":{"line":74,"column":55},"end":{"line":74,"column":94}}],"line":74},"5":{"loc":{"start":{"line":75,"column":23},"end":{"line":75,"column":94}},"type":"binary-expr","locations":[{"start":{"line":75,"column":23},"end":{"line":75,"column":51}},{"start":{"line":75,"column":55},"end":{"line":75,"column":94}}],"line":75},"6":{"loc":{"start":{"line":76,"column":24},"end":{"line":76,"column":98}},"type":"binary-expr","locations":[{"start":{"line":76,"column":24},"end":{"line":76,"column":54}},{"start":{"line":76,"column":58},"end":{"line":76,"column":98}}],"line":76},"7":{"loc":{"start":{"line":77,"column":23},"end":{"line":77,"column":93}},"type":"binary-expr","locations":[{"start":{"line":77,"column":23},"end":{"line":77,"column":51}},{"start":{"line":77,"column":55},"end":{"line":77,"column":93}}],"line":77},"8":{"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":102}},"type":"binary-expr","locations":[{"start":{"line":78,"column":26},"end":{"line":78,"column":60}},{"start":{"line":78,"column":64},"end":{"line":78,"column":102}}],"line":78},"9":{"loc":{"start":{"line":93,"column":16},"end":{"line":93,"column":44}},"type":"binary-expr","locations":[{"start":{"line":93,"column":16},"end":{"line":93,"column":38}},{"start":{"line":93,"column":42},"end":{"line":93,"column":44}}],"line":93},"10":{"loc":{"start":{"line":95,"column":11},"end":{"line":95,"column":137}},"type":"binary-expr","locations":[{"start":{"line":95,"column":11},"end":{"line":95,"column":31}},{"start":{"line":95,"column":35},"end":{"line":95,"column":66}},{"start":{"line":95,"column":70},"end":{"line":95,"column":97}},{"start":{"line":95,"column":101},"end":{"line":95,"column":137}}],"line":95},"11":{"loc":{"start":{"line":97,"column":2},"end":{"line":97,"column":35}},"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":35}},{"start":{},"end":{}}],"line":97},"12":{"loc":{"start":{"line":98,"column":16},"end":{"line":98,"column":93}},"type":"binary-expr","locations":[{"start":{"line":98,"column":16},"end":{"line":98,"column":53}},{"start":{"line":98,"column":57},"end":{"line":98,"column":93}}],"line":98},"13":{"loc":{"start":{"line":99,"column":2},"end":{"line":99,"column":31}},"type":"if","locations":[{"start":{"line":99,"column":2},"end":{"line":99,"column":31}},{"start":{},"end":{}}],"line":99},"14":{"loc":{"start":{"line":101,"column":2},"end":{"line":108,"column":3}},"type":"if","locations":[{"start":{"line":101,"column":2},"end":{"line":108,"column":3}},{"start":{},"end":{}}],"line":101},"15":{"loc":{"start":{"line":105,"column":4},"end":{"line":107,"column":5}},"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":107,"column":5}},{"start":{},"end":{}}],"line":105},"16":{"loc":{"start":{"line":114,"column":24},"end":{"line":114,"column":52}},"type":"binary-expr","locations":[{"start":{"line":114,"column":24},"end":{"line":114,"column":33}},{"start":{"line":114,"column":37},"end":{"line":114,"column":52}}],"line":114},"17":{"loc":{"start":{"line":115,"column":2},"end":{"line":117,"column":3}},"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":117,"column":3}},{"start":{},"end":{}}],"line":115},"18":{"loc":{"start":{"line":118,"column":2},"end":{"line":166,"column":3}},"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":166,"column":3}},{"start":{},"end":{}}],"line":118},"19":{"loc":{"start":{"line":118,"column":6},"end":{"line":118,"column":38}},"type":"binary-expr","locations":[{"start":{"line":118,"column":6},"end":{"line":118,"column":27}},{"start":{"line":118,"column":31},"end":{"line":118,"column":38}}],"line":118},"20":{"loc":{"start":{"line":121,"column":19},"end":{"line":121,"column":56}},"type":"binary-expr","locations":[{"start":{"line":121,"column":19},"end":{"line":121,"column":39}},{"start":{"line":121,"column":43},"end":{"line":121,"column":56}}],"line":121},"21":{"loc":{"start":{"line":122,"column":13},"end":{"line":122,"column":44}},"type":"binary-expr","locations":[{"start":{"line":122,"column":13},"end":{"line":122,"column":34}},{"start":{"line":122,"column":38},"end":{"line":122,"column":44}}],"line":122},"22":{"loc":{"start":{"line":123,"column":17},"end":{"line":123,"column":57}},"type":"binary-expr","locations":[{"start":{"line":123,"column":17},"end":{"line":123,"column":44}},{"start":{"line":123,"column":48},"end":{"line":123,"column":57}}],"line":123},"23":{"loc":{"start":{"line":133,"column":28},"end":{"line":133,"column":71}},"type":"binary-expr","locations":[{"start":{"line":133,"column":28},"end":{"line":133,"column":63}},{"start":{"line":133,"column":67},"end":{"line":133,"column":71}}],"line":133},"24":{"loc":{"start":{"line":137,"column":27},"end":{"line":137,"column":49}},"type":"binary-expr","locations":[{"start":{"line":137,"column":27},"end":{"line":137,"column":37}},{"start":{"line":137,"column":41},"end":{"line":137,"column":49}}],"line":137},"25":{"loc":{"start":{"line":139,"column":34},"end":{"line":139,"column":110}},"type":"cond-expr","locations":[{"start":{"line":139,"column":69},"end":{"line":139,"column":105}},{"start":{"line":139,"column":108},"end":{"line":139,"column":110}}],"line":139},"26":{"loc":{"start":{"line":146,"column":4},"end":{"line":149,"column":5}},"type":"if","locations":[{"start":{"line":146,"column":4},"end":{"line":149,"column":5}},{"start":{},"end":{}}],"line":146},"27":{"loc":{"start":{"line":146,"column":8},"end":{"line":146,"column":105}},"type":"binary-expr","locations":[{"start":{"line":146,"column":8},"end":{"line":146,"column":33}},{"start":{"line":146,"column":37},"end":{"line":146,"column":74}},{"start":{"line":146,"column":78},"end":{"line":146,"column":85}},{"start":{"line":146,"column":89},"end":{"line":146,"column":105}}],"line":146},"28":{"loc":{"start":{"line":167,"column":2},"end":{"line":169,"column":3}},"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":169,"column":3}},{"start":{},"end":{}}],"line":167},"29":{"loc":{"start":{"line":191,"column":3},"end":{"line":191,"column":17}},"type":"binary-expr","locations":[{"start":{"line":191,"column":3},"end":{"line":191,"column":11}},{"start":{"line":191,"column":15},"end":{"line":191,"column":17}}],"line":191}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":1,"12":1,"13":2,"14":2,"15":6,"16":6,"17":0,"18":6,"19":2,"20":4,"21":0,"22":2,"23":0,"24":0,"25":0,"26":0,"27":0,"28":2,"29":1,"30":1,"31":1,"32":1,"33":1,"34":4,"35":1,"36":0,"37":1,"38":1,"39":0,"40":1,"41":1,"42":0,"43":0,"44":0,"45":1,"46":1,"47":1,"48":2,"49":2,"50":0,"51":2,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":2,"67":2,"68":0,"69":0,"70":0,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1},"f":{"0":1,"1":2,"2":6,"3":4,"4":0,"5":2,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":4,"13":2,"14":0,"15":1},"b":{"0":[1,0],"1":[0,6],"2":[6,6],"3":[4,4],"4":[0,0],"5":[2,2],"6":[0,0],"7":[0,0],"8":[0,0],"9":[1,0],"10":[4,3,2,1],"11":[0,1],"12":[1,1],"13":[0,1],"14":[0,1],"15":[0,0],"16":[2,1],"17":[0,2],"18":[0,2],"19":[2,2],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0,0],"28":[2,0],"29":[1,1]},"inputSourceMap":{"version":3,"sources":["D:/sophra/src/lib/shared/logger/src/logger.ts"],"sourcesContent":["import { Logger } from \"@/lib/shared/types\";\r\nimport path from \"path\";\r\nimport type * as Winston from \"winston\";\r\n\r\n// Dynamic imports for server-side only modules\r\nlet winston: typeof Winston;\r\nlet Logtail: typeof import(\"@logtail/node\").Logtail;\r\nlet LogtailTransport: typeof import(\"@logtail/winston\").LogtailTransport;\r\n\r\n// Initialize server-side modules\r\nif (typeof window === \"undefined\") {\r\n  const importWinston = async () => {\r\n    const winstonModule = await import(\"winston\");\r\n    winston = winstonModule.default;\r\n    const logtailNode = await import(\"@logtail/node\");\r\n    const logtailWinston = await import(\"@logtail/winston\");\r\n    Logtail = logtailNode.Logtail;\r\n    LogtailTransport = logtailWinston.LogtailTransport;\r\n\r\n    // Move winston color configuration here\r\n    winston.addColors({\r\n      error: \"white bgRed bold\",\r\n      warn: \"black bgYellow\",\r\n      info: \"black bgGreen\",\r\n      debug: \"white bgBlue\",\r\n      http: \"white bgMagenta\",\r\n      verbose: \"white bgGray\",\r\n      build: \"black bgCyan\",\r\n      test: \"white bgMagenta\",\r\n      deploy: \"white bgGreen\",\r\n      cache: \"white bgBlue\",\r\n    });\r\n  };\r\n  // Execute the import\r\n  importWinston();\r\n}\r\n\r\n// Add turborepo-specific emoji indicators\r\nconst LOG_EMOJIS = {\r\n  error: \"🚨\",\r\n  warn: \"⚠️\",\r\n  info: \"ℹ️\",\r\n  debug: \"🔍\",\r\n  http: \"🌐\",\r\n  verbose: \"📝\",\r\n  build: \"📦\",\r\n  test: \"🧪\",\r\n  deploy: \"🚀\",\r\n  cache: \"💾\",\r\n} as const;\r\n\r\n// Enhanced log colors with background colors\r\nconst LOG_COLORS = {\r\n  error: \"white bgRed bold\",\r\n  warn: \"black bgYellow\",\r\n  info: \"black bgGreen\",\r\n  debug: \"white bgBlue\",\r\n  http: \"white bgMagenta\",\r\n  verbose: \"white bgGray\",\r\n  build: \"black bgCyan\",\r\n  test: \"white bgMagenta\",\r\n  deploy: \"white bgGreen\",\r\n  cache: \"white bgBlue\",\r\n} as const;\r\n\r\nexport interface LoggerConfig {\r\n  service?: string;\r\n  logtailToken?: string;\r\n  environment?: string;\r\n  level?: string;\r\n  silent?: boolean;\r\n  workspace?: string;\r\n}\r\n\r\n// Create a browser-safe logger implementation\r\nconst createBrowserLogger = (component: string): Logger => {\r\n  let currentLevel = LogLevel.DEBUG;\r\n\r\n  const shouldLog = (level: LogLevel): boolean => {\r\n    const levels = {\r\n      [LogLevel.ERROR]: 0,\r\n      [LogLevel.WARN]: 1,\r\n      [LogLevel.INFO]: 2,\r\n      [LogLevel.HTTP]: 3,\r\n      [LogLevel.DEBUG]: 4,\r\n      [LogLevel.VERBOSE]: 5,\r\n      [LogLevel.BUILD]: 6,\r\n      [LogLevel.TEST]: 7,\r\n      [LogLevel.DEPLOY]: 8,\r\n      [LogLevel.CACHE]: 9,\r\n    };\r\n    if (!(level in levels) || !(currentLevel in levels)) {\r\n      return true;\r\n    }\r\n    return levels[level] <= levels[currentLevel as LogLevel];\r\n  };\r\n\r\n  const browserLogger = {\r\n    error: (...args: any[]) => shouldLog(LogLevel.ERROR) && console.error(`[${component}]`, ...args),\r\n    warn: (...args: any[]) => shouldLog(LogLevel.WARN) && console.warn(`[${component}]`, ...args),\r\n    info: (...args: any[]) => shouldLog(LogLevel.INFO) && console.info(`[${component}]`, ...args),\r\n    debug: (...args: any[]) => shouldLog(LogLevel.DEBUG) && console.debug(`[${component}]`, ...args),\r\n    http: (...args: any[]) => shouldLog(LogLevel.HTTP) && console.log(`[${component}]`, ...args),\r\n    verbose: (...args: any[]) => shouldLog(LogLevel.VERBOSE) && console.log(`[${component}]`, ...args),\r\n    service: \"sophra\",\r\n    get level() {\r\n      return currentLevel;\r\n    },\r\n    set level(newLevel: string) {\r\n      currentLevel = newLevel as LogLevel;\r\n    },\r\n  } as unknown as Logger;\r\n  return browserLogger;\r\n};\r\n\r\nlet globalLoggerInstance: Winston.Logger | null = null;\r\n\r\nfunction getCallerFile(): string {\r\n  // Create an error to get the stack trace\r\n  const err = new Error();\r\n  Error.captureStackTrace(err);\r\n\r\n  // Parse the stack trace to find the caller\r\n  const stack = err.stack?.split(\"\\n\") || [];\r\n\r\n  // Find the first line that's not from this file or node internal\r\n  const callerLine = stack.find((line) => {\r\n    return (\r\n      line.includes(\"at \") &&\r\n      !line.includes(\"getCallerFile\") &&\r\n      !line.includes(\"getLogger\") &&\r\n      !line.includes(\"Object.<anonymous>\")\r\n    );\r\n  });\r\n\r\n  if (!callerLine) return \"sophra\";\r\n\r\n  // Extract the file path\r\n  const match =\r\n    callerLine.match(/\\((.+?):\\d+:\\d+\\)/) ||\r\n    callerLine.match(/at (.+?):\\d+:\\d+/);\r\n\r\n  if (!match) return \"unknown\";\r\n\r\n  // Get the full path\r\n  const fullPath = match[1];\r\n\r\n  // Handle webpack-internal paths\r\n  if (fullPath.includes(\"webpack-internal\")) {\r\n    // Look for src/app or src/lib pattern\r\n    const srcMatch = fullPath.match(\r\n      /src\\/(app|lib)\\/(.*?)(\\/route|\\/page|\\/index|\\.[jt]sx?)/\r\n    );\r\n    if (srcMatch) {\r\n      return srcMatch[2]\r\n        .replace(/^api\\//, \"\") // Remove api prefix\r\n        .replace(/\\//g, \".\"); // Convert slashes to dots\r\n    }\r\n  }\r\n\r\n  // For non-webpack paths, use the relative path approach\r\n  const projectRoot = process.cwd();\r\n  const relativePath = path.relative(projectRoot, fullPath);\r\n\r\n  return relativePath\r\n    .replace(/\\.(js|ts|tsx|jsx)$/, \"\") // Remove extension\r\n    .replace(/^src\\/(app|lib)\\//, \"\") // Remove src/app or src/lib\r\n    .replace(/\\/route$/, \"\") // Remove route suffix\r\n    .replace(/\\/(index|page)$/, \"\") // Remove index/page suffix\r\n    .replace(/\\//g, \".\") // Convert slashes to dots\r\n    .replace(/^api\\./, \"\"); // Remove api prefix\r\n}\r\n\r\n// Modify getLogger to use automatic component detection\r\nexport function getLogger(component?: string): Logger {\r\n  const autoComponent = component || getCallerFile();\r\n\r\n  // Check if we're in a browser environment\r\n  if (typeof window !== \"undefined\") {\r\n    return createBrowserLogger(autoComponent);\r\n  }\r\n\r\n  // Server-side logging logic\r\n  if (!globalLoggerInstance && winston) {\r\n    const config = {\r\n      service: \"sophra\",\r\n      environment: process.env.NODE_ENV || \"development\",\r\n      level: process.env.LOG_LEVEL || \"info\",\r\n      workspace: process.env.TURBO_WORKSPACE || \"unknown\",\r\n    };\r\n\r\n    const transports: Winston.transport[] = [\r\n      new winston.transports.Console({\r\n        format: winston.format.combine(\r\n          winston.format.colorize({ colors: LOG_COLORS }),\r\n          winston.format.simple(),\r\n          winston.format.printf(\r\n            ({ level, message, timestamp, component, ...metadata }) => {\r\n              // Extract the base level without any color codes\r\n              const baseLevel = level.replace(/\\u001b\\[\\d+m/g, \"\");\r\n              const emoji =\r\n                LOG_EMOJIS[\r\n                  baseLevel.toLowerCase() as keyof typeof LOG_EMOJIS\r\n                ] || \"📋\";\r\n              const ts = new Date(\r\n                timestamp as string | number | Date\r\n              ).toLocaleTimeString();\r\n              const comp = component || \"sophra\";\r\n\r\n              // Only include metadata if it's not empty and exclude certain fields\r\n              const { service, environment, workspace, ...restMetadata } =\r\n                metadata;\r\n              const metadataStr = Object.keys(restMetadata).length\r\n                ? ` | ${JSON.stringify(restMetadata)}`\r\n                : \"\";\r\n\r\n              return `${emoji} ${ts} [${comp}] ${level}: ${message}${metadataStr}`;\r\n            }\r\n          )\r\n        ),\r\n      }),\r\n    ];\r\n\r\n    if (\r\n      process.env.LOGTAIL_TOKEN &&\r\n      process.env.NODE_ENV === \"production\" &&\r\n      Logtail &&\r\n      LogtailTransport\r\n    ) {\r\n      const logtail = new Logtail(process.env.LOGTAIL_TOKEN);\r\n      transports.push(new LogtailTransport(logtail));\r\n    }\r\n\r\n    globalLoggerInstance = winston.createLogger({\r\n      level: config.level,\r\n      format: winston.format.combine(\r\n        winston.format.timestamp(),\r\n        winston.format.errors({ stack: true }),\r\n        winston.format.splat()\r\n      ),\r\n      defaultMeta: {\r\n        service: config.service,\r\n        component: autoComponent,\r\n        environment: config.environment,\r\n        workspace: config.workspace,\r\n      },\r\n      transports,\r\n    }) as Logger;\r\n\r\n    (globalLoggerInstance as Logger).service = config.service;\r\n  }\r\n\r\n  // If winston isn't initialized yet, return a browser-like logger\r\n  if (!globalLoggerInstance) {\r\n    return createBrowserLogger(autoComponent);\r\n  }\r\n\r\n  const childLogger = globalLoggerInstance.child({\r\n    component: autoComponent,\r\n    workspace: process.env.TURBO_WORKSPACE,\r\n  }) as Logger;\r\n\r\n  childLogger.service = (globalLoggerInstance as Logger).service;\r\n\r\n  return childLogger;\r\n}\r\n\r\n// Create a default logger instance\r\nexport const logger = getLogger();\r\nexport default logger;\r\n\r\nexport enum LogLevel {\r\n  ERROR = \"error\",\r\n  WARN = \"warn\",\r\n  INFO = \"info\",\r\n  DEBUG = \"debug\",\r\n  HTTP = \"http\",\r\n  VERBOSE = \"verbose\",\r\n  BUILD = \"build\",\r\n  TEST = \"test\",\r\n  DEPLOY = \"deploy\",\r\n  CACHE = \"cache\",\r\n}\r\n"],"mappings":"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","names":["component","LogLevel"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"de2472c94b4e8c50b7e506edd6df21c80d4ab9c2"},"D:/sophra/src/lib/shared/logger/index.ts":{"path":"D:/sophra/src/lib/shared/logger/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":2,"column":42}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["D:/sophra/src/lib/shared/logger/index.ts"],"sourcesContent":["import { getLogger } from \"./src/logger\";\r\n\r\n// Create and export the default logger instance\r\nexport const logger = getLogger(\"default\");\r\n\r\n// Re-export everything from the main logger\r\nexport * from \"./src/logger\";\r\nexport default logger;\r\n"],"mappings":"AAAA,SAAS,iBAAiB;AAGnB,aAAM,SAAS,UAAU,SAAS;AAGzC,cAAc;AACd,eAAe;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b996adfed3030205b7841882b1fd6e1add3ce1bc"},"D:/sophra/src/app/api/nous/learn/models/route.ts":{"path":"D:/sophra/src/app/api/nous/learn/models/route.ts","statementMap":{"0":{"start":{"line":6,"column":23},"end":{"line":6,"column":31}},"1":{"start":{"line":7,"column":26},"end":{"line":12,"column":2}},"2":{"start":{"line":14,"column":20},"end":{"line":14,"column":30}},"3":{"start":{"line":15,"column":2},"end":{"line":65,"column":3}},"4":{"start":{"line":16,"column":4},"end":{"line":19,"column":7}},"5":{"start":{"line":20,"column":19},"end":{"line":27,"column":6}},"6":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"7":{"start":{"line":29,"column":6},"end":{"line":29,"column":48}},"8":{"start":{"line":31,"column":4},"end":{"line":34,"column":7}},"9":{"start":{"line":35,"column":4},"end":{"line":43,"column":7}},"10":{"start":{"line":45,"column":20},"end":{"line":45,"column":42}},"11":{"start":{"line":46,"column":4},"end":{"line":52,"column":7}},"12":{"start":{"line":53,"column":4},"end":{"line":64,"column":6}},"13":{"start":{"line":68,"column":2},"end":{"line":117,"column":3}},"14":{"start":{"line":69,"column":17},"end":{"line":69,"column":33}},"15":{"start":{"line":70,"column":23},"end":{"line":70,"column":56}},"16":{"start":{"line":71,"column":4},"end":{"line":80,"column":5}},"17":{"start":{"line":72,"column":6},"end":{"line":79,"column":8}},"18":{"start":{"line":81,"column":64},"end":{"line":81,"column":79}},"19":{"start":{"line":82,"column":18},"end":{"line":99,"column":6}},"20":{"start":{"line":100,"column":4},"end":{"line":100,"column":66}},"21":{"start":{"line":101,"column":4},"end":{"line":104,"column":7}},"22":{"start":{"line":106,"column":4},"end":{"line":106,"column":54}},"23":{"start":{"line":107,"column":4},"end":{"line":112,"column":5}},"24":{"start":{"line":108,"column":6},"end":{"line":111,"column":8}},"25":{"start":{"line":113,"column":4},"end":{"line":116,"column":6}}},"fnMap":{"0":{"name":"GET","decl":{"start":{"line":13,"column":22},"end":{"line":13,"column":25}},"loc":{"start":{"line":13,"column":31},"end":{"line":66,"column":1}},"line":13},"1":{"name":"POST","decl":{"start":{"line":67,"column":22},"end":{"line":67,"column":26}},"loc":{"start":{"line":67,"column":32},"end":{"line":118,"column":1}},"line":67}},"branchMap":{"0":{"loc":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},{"start":{},"end":{}}],"line":28},"1":{"loc":{"start":{"line":47,"column":13},"end":{"line":50,"column":15}},"type":"cond-expr","locations":[{"start":{"line":47,"column":38},"end":{"line":50,"column":7}},{"start":{"line":50,"column":10},"end":{"line":50,"column":15}}],"line":47},"2":{"loc":{"start":{"line":57,"column":17},"end":{"line":57,"column":73}},"type":"cond-expr","locations":[{"start":{"line":57,"column":42},"end":{"line":57,"column":55}},{"start":{"line":57,"column":58},"end":{"line":57,"column":73}}],"line":57},"3":{"loc":{"start":{"line":71,"column":4},"end":{"line":80,"column":5}},"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":80,"column":5}},{"start":{},"end":{}}],"line":71},"4":{"loc":{"start":{"line":107,"column":4},"end":{"line":112,"column":5}},"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":112,"column":5}},{"start":{},"end":{}}],"line":107}},"s":{"0":1,"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":0,"9":0,"10":2,"11":2,"12":2,"13":3,"14":3,"15":3,"16":3,"17":1,"18":2,"19":2,"20":2,"21":0,"22":2,"23":2,"24":2,"25":0},"f":{"0":2,"1":3},"b":{"0":[2,0],"1":[2,0],"2":[2,0],"3":[1,2],"4":[2,0]},"inputSourceMap":{"version":3,"sources":["D:/sophra/src/app/api/nous/learn/models/route.ts"],"sourcesContent":["import { prisma } from \"@/lib/shared/database/client\";\r\nimport logger from \"@/lib/shared/logger\";\r\nimport { Prisma, ModelType } from \"@prisma/client\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { z } from \"zod\";\r\n// Declare Node.js runtime\r\nexport const runtime = \"nodejs\";\r\n\r\n\r\nconst ModelCreateSchema = z.object({\r\n  type: z.nativeEnum(ModelType),\r\n  hyperparameters: z.record(z.unknown()),\r\n  features: z.array(z.string()),\r\n  trainingParams: z.record(z.unknown()).optional(),\r\n});\r\n\r\nexport async function GET(req: NextRequest): Promise<NextResponse> {\r\n  const startTime = Date.now();\r\n  try {\r\n    logger.info(\"Received models request\", {\r\n      url: req.url,\r\n      headers: Object.fromEntries(req.headers),\r\n    });\r\n\r\n    const models = await prisma.modelConfig.findMany({\r\n      include: {\r\n        modelVersions: {\r\n          orderBy: { createdAt: \"desc\" },\r\n          take: 1,\r\n        },\r\n      },\r\n    });\r\n\r\n    if (!models) {\r\n      throw new Error(\"Failed to fetch models\");\r\n    }\r\n\r\n    logger.info(\"Retrieved models from database\", {\r\n      modelCount: models.length,\r\n      took: Date.now() - startTime,\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: models,\r\n      meta: {\r\n        total: models.length,\r\n        page: 1,\r\n        pageSize: 10\r\n      }\r\n    });\r\n  } catch (error) {\r\n    const latency = Date.now() - startTime;\r\n    logger.error(\"Failed to fetch models\", {\r\n      error:\r\n        error instanceof Error\r\n          ? {\r\n              message: error.message,\r\n              stack: error.stack,\r\n            }\r\n          : error,\r\n      took: latency,\r\n    });\r\n    return NextResponse.json(\r\n      {\r\n        success: false,\r\n        error: \"Failed to fetch models\",\r\n        details: error instanceof Error ? error.message : \"Unknown error\",\r\n        metadata: {\r\n          took: latency,\r\n          timestamp: new Date().toISOString(),\r\n        },\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function POST(req: NextRequest): Promise<NextResponse> {\r\n  try {\r\n    const body = await req.json();\r\n    const validation = ModelCreateSchema.safeParse(body);\r\n\r\n    if (!validation.success) {\r\n      return NextResponse.json(\r\n        {\r\n          success: false,\r\n          error: \"Invalid request format\",\r\n          details: validation.error.format(),\r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const { type, hyperparameters, features, trainingParams } = validation.data;\r\n\r\n    const model = await prisma.modelConfig.create({\r\n      data: {\r\n        type,\r\n        hyperparameters: hyperparameters as Prisma.InputJsonValue,\r\n        features: features as string[],\r\n        trainingParams: trainingParams as Prisma.InputJsonValue,\r\n        modelVersions: {\r\n          create: {\r\n            metrics: {} as Prisma.InputJsonValue,\r\n            artifactPath: \"\",\r\n            parentVersion: null,\r\n          },\r\n        },\r\n      },\r\n      include: {\r\n        modelVersions: true,\r\n      },\r\n    });\r\n\r\n    logger.info(\"Created new model\", { modelId: model.id, type });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: model\r\n    });\r\n  } catch (error) {\r\n    logger.error(\"Failed to create model\", { error });\r\n    if (error instanceof Error) {\r\n      return NextResponse.json(\r\n        { success: false, error: \"Failed to create model\", details: error.message },\r\n        { status: 500 }\r\n      );\r\n    }\r\n    return NextResponse.json(\r\n      { success: false, error: \"Failed to create model\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"23f8bb1ac023ba10a9583cf31be88137d822147d"}}