{"/workspaces/sophra/src/app/api/admin.middleware.ts":{"path":"/workspaces/sophra/src/app/api/admin.middleware.ts","statementMap":{"0":{"start":{"line":6,"column":21},"end":{"line":6,"column":57}},"1":{"start":{"line":7,"column":2},"end":{"line":12,"column":3}},"2":{"start":{"line":8,"column":4},"end":{"line":11,"column":6}},"3":{"start":{"line":13,"column":2},"end":{"line":74,"column":3}},"4":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"5":{"start":{"line":15,"column":6},"end":{"line":15,"column":54}},"6":{"start":{"line":18,"column":4},"end":{"line":28,"column":5}},"7":{"start":{"line":19,"column":6},"end":{"line":24,"column":9}},"8":{"start":{"line":26,"column":6},"end":{"line":26,"column":75}},"9":{"start":{"line":27,"column":6},"end":{"line":27,"column":40}},"10":{"start":{"line":29,"column":4},"end":{"line":34,"column":5}},"11":{"start":{"line":30,"column":6},"end":{"line":33,"column":8}},"12":{"start":{"line":35,"column":20},"end":{"line":35,"column":42}},"13":{"start":{"line":36,"column":4},"end":{"line":41,"column":5}},"14":{"start":{"line":37,"column":6},"end":{"line":40,"column":8}},"15":{"start":{"line":42,"column":25},"end":{"line":42,"column":32}},"16":{"start":{"line":43,"column":21},"end":{"line":43,"column":45}},"17":{"start":{"line":44,"column":4},"end":{"line":49,"column":5}},"18":{"start":{"line":45,"column":6},"end":{"line":48,"column":8}},"19":{"start":{"line":50,"column":4},"end":{"line":57,"column":5}},"20":{"start":{"line":51,"column":6},"end":{"line":54,"column":9}},"21":{"start":{"line":56,"column":6},"end":{"line":56,"column":73}},"22":{"start":{"line":58,"column":4},"end":{"line":67,"column":6}},"23":{"start":{"line":69,"column":4},"end":{"line":69,"column":58}},"24":{"start":{"line":70,"column":4},"end":{"line":73,"column":6}}},"fnMap":{"0":{"name":"adminMiddleware","decl":{"start":{"line":5,"column":22},"end":{"line":5,"column":37}},"loc":{"start":{"line":5,"column":47},"end":{"line":75,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":2},"end":{"line":12,"column":3}},"type":"if","locations":[{"start":{"line":7,"column":2},"end":{"line":12,"column":3}},{"start":{},"end":{}}],"line":7},"1":{"loc":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},{"start":{},"end":{}}],"line":14},"2":{"loc":{"start":{"line":29,"column":4},"end":{"line":34,"column":5}},"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":34,"column":5}},{"start":{},"end":{}}],"line":29},"3":{"loc":{"start":{"line":36,"column":4},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":41,"column":5}},{"start":{},"end":{}}],"line":36},"4":{"loc":{"start":{"line":36,"column":8},"end":{"line":36,"column":47}},"type":"binary-expr","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":16}},{"start":{"line":36,"column":20},"end":{"line":36,"column":47}}],"line":36},"5":{"loc":{"start":{"line":44,"column":4},"end":{"line":49,"column":5}},"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":49,"column":5}},{"start":{},"end":{}}],"line":44},"6":{"loc":{"start":{"line":44,"column":8},"end":{"line":44,"column":77}},"type":"binary-expr","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":35}},{"start":{"line":44,"column":39},"end":{"line":44,"column":77}}],"line":44}},"s":{"0":7,"1":7,"2":0,"3":7,"4":7,"5":1,"6":6,"7":6,"8":0,"9":0,"10":6,"11":1,"12":5,"13":5,"14":2,"15":3,"16":3,"17":3,"18":1,"19":2,"20":2,"21":0,"22":2,"23":1,"24":1},"f":{"0":7},"b":{"0":[0,7],"1":[1,6],"2":[1,5],"3":[2,3],"4":[5,4],"5":[1,2],"6":[3,1]},"inputSourceMap":{"version":3,"sources":["/workspaces/sophra/src/app/api/admin.middleware.ts"],"sourcesContent":["import { prisma } from \"@/lib/shared/database/client\";\nimport * as jwt from \"jsonwebtoken\";\nimport type { NextRequest } from \"next/server\";\nimport { NextResponse } from \"next/server\";\nimport { hasPermission, isSuperAdmin } from \"./admin/permissions\";\n\ninterface AdminTokenPayload {\n  name: string;\n  type: \"admin\";\n  permissions?: string[];\n}\n\nexport async function adminMiddleware(request: NextRequest) {\n  const adminToken = request.headers.get(\"x-admin-token\");\n\n  if (!adminToken) {\n    return NextResponse.json(\n      { error: \"Missing required header: x-admin-token\" },\n      { status: 401 }\n    );\n  }\n\n  try {\n    if (!process.env.JWT_SECRET) {\n      throw new Error(\"JWT_SECRET is not configured\");\n    }\n\n    // First verify the token exists in the database\n    let tokenRecord;\n    try {\n      tokenRecord = await prisma.adminToken.findFirst({\n        where: {\n          token: adminToken,\n          isActive: true,\n        },\n      });\n    } catch (error) {\n      console.error(\"Database error while validating admin token:\", error);\n      throw new Error(\"Database error\");\n    }\n\n    if (!tokenRecord) {\n      return NextResponse.json(\n        { error: \"Invalid admin token\" },\n        { status: 401 }\n      );\n    }\n\n    // Verify and decode the JWT\n    const decoded = jwt.decode(adminToken);\n    if (!decoded || typeof decoded === 'string') {\n      return NextResponse.json(\n        { error: \"Invalid token format\" },\n        { status: 401 }\n      );\n    }\n\n    const tokenPayload = decoded as AdminTokenPayload;\n\n    // Check permissions for the endpoint\n    const endpoint = request.nextUrl.pathname;\n    if (\n      !isSuperAdmin(tokenPayload) &&\n      !hasPermission(tokenPayload, endpoint)\n    ) {\n      return NextResponse.json(\n        { error: \"Insufficient permissions for this endpoint\" },\n        { status: 403 }\n      );\n    }\n\n    // Update last used timestamp\n    try {\n      await prisma.adminToken.update({\n        where: { id: tokenRecord.id },\n        data: { lastUsedAt: new Date() },\n      });\n    } catch (error) {\n      console.error(\"Database error while updating admin token:\", error);\n      // Don't throw here since the validation was successful\n    }\n\n    // Return success response with token info in headers\n    return NextResponse.json(\n      {},\n      {\n        status: 200,\n        headers: {\n          'x-admin-token-name': tokenPayload.name,\n          'x-admin-token-type': tokenPayload.type\n        }\n      }\n    );\n  } catch (error) {\n    console.error(\"Error validating admin token:\", error);\n    return NextResponse.json(\n      { error: \"Error validating admin token\" },\n      { status: 500 }\n    );\n  }\n}\n"],"mappings":"AAAA,SAAS,cAAc;AACvB,YAAY,SAAS;AAErB,SAAS,oBAAoB;AAC7B,SAAS,eAAe,oBAAoB;AAQ5C,sBAAsB,gBAAgB,SAAsB;AAC1D,QAAM,aAAa,QAAQ,QAAQ,IAAI,eAAe;AAEtD,MAAI,CAAC,YAAY;AACf,WAAO,aAAa;AAAA,MAClB,EAAE,OAAO,yCAAyC;AAAA,MAClD,EAAE,QAAQ,IAAI;AAAA,IAChB;AAAA,EACF;AAEA,MAAI;AACF,QAAI,CAAC,QAAQ,IAAI,YAAY;AAC3B,YAAM,IAAI,MAAM,8BAA8B;AAAA,IAChD;AAGA,QAAI;AACJ,QAAI;AACF,oBAAc,MAAM,OAAO,WAAW,UAAU;AAAA,QAC9C,OAAO;AAAA,UACL,OAAO;AAAA,UACP,UAAU;AAAA,QACZ;AAAA,MACF,CAAC;AAAA,IACH,SAAS,OAAO;AACd,cAAQ,MAAM,gDAAgD,KAAK;AACnE,YAAM,IAAI,MAAM,gBAAgB;AAAA,IAClC;AAEA,QAAI,CAAC,aAAa;AAChB,aAAO,aAAa;AAAA,QAClB,EAAE,OAAO,sBAAsB;AAAA,QAC/B,EAAE,QAAQ,IAAI;AAAA,MAChB;AAAA,IACF;AAGA,UAAM,UAAU,IAAI,OAAO,UAAU;AACrC,QAAI,CAAC,WAAW,OAAO,YAAY,UAAU;AAC3C,aAAO,aAAa;AAAA,QAClB,EAAE,OAAO,uBAAuB;AAAA,QAChC,EAAE,QAAQ,IAAI;AAAA,MAChB;AAAA,IACF;AAEA,UAAM,eAAe;AAGrB,UAAM,WAAW,QAAQ,QAAQ;AACjC,QACE,CAAC,aAAa,YAAY,KAC1B,CAAC,cAAc,cAAc,QAAQ,GACrC;AACA,aAAO,aAAa;AAAA,QAClB,EAAE,OAAO,6CAA6C;AAAA,QACtD,EAAE,QAAQ,IAAI;AAAA,MAChB;AAAA,IACF;AAGA,QAAI;AACF,YAAM,OAAO,WAAW,OAAO;AAAA,QAC7B,OAAO,EAAE,IAAI,YAAY,GAAG;AAAA,QAC5B,MAAM,EAAE,YAAY,oBAAI,KAAK,EAAE;AAAA,MACjC,CAAC;AAAA,IACH,SAAS,OAAO;AACd,cAAQ,MAAM,8CAA8C,KAAK;AAAA,IAEnE;AAGA,WAAO,aAAa;AAAA,MAClB,CAAC;AAAA,MACD;AAAA,QACE,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,sBAAsB,aAAa;AAAA,UACnC,sBAAsB,aAAa;AAAA,QACrC;AAAA,MACF;AAAA,IACF;AAAA,EACF,SAAS,OAAO;AACd,YAAQ,MAAM,iCAAiC,KAAK;AACpD,WAAO,aAAa;AAAA,MAClB,EAAE,OAAO,+BAA+B;AAAA,MACxC,EAAE,QAAQ,IAAI;AAAA,IAChB;AAAA,EACF;AACF;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"db46c0430d5644a00733e892d451d59ee0444961"}}