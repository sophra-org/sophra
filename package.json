{
  "name": "sophra",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "prepare": "husky install",
    "sync-codebase": "ts-node --project tsconfig.codebase-sync.json codebase-sync.ts",
    "sync-codebase:watch": "ts-node --project tsconfig.codebase-sync.json codebase-sync.ts watch",
    "sync-codebase:db:generate": "cd prisma2 && prisma generate",
    "sync-codebase:db:migrate": "cd prisma2 && prisma migrate dev --create-only",
    "sync-codebase:db:deploy": "cd prisma2 && prisma migrate deploy",
    "sync-codebase:db:reset": "cd prisma2 && prisma migrate reset --force --skip-seed",
    "sync-codebase:db:studio": "cd prisma2 && prisma studio",
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "type-check": "tsc --noEmit",
    "tokenseed": "ts-node --project prisma/tsconfig.json prisma/tokenseed.ts",
    "test": "vitest run --coverage.enabled --coverage.provider=istanbul --coverage.reporter=json --coverage.reporter=html --coverage.reporter=lcov --coverage.reporter=cobertura --coverage.reportsDirectory=./coverage --coverage.clean=false --coverage.cleanOnRerun=false --reporter=default --reporter=junit",
    "test:watch": "vitest --coverage.enabled --coverage.clean=false --coverage.cleanOnRerun=false",
    "test:unit": "npx vitest run \"src/__tests__/unit/.*\\.test\\.[jt]sx?$\"",
    "test:integration": "npx vitest run \"src/__tests__/integration/.*\\.test\\.[jt]sx?$\"",
    "test:e2e": "npx vitest run \"src/__tests__/e2e/.*\\.test\\.[jt]sx?$\"",
    "test:cortex": "npx vitest run \"src/__tests__/cortex/.*\\.test\\.[jt]sx?$\"",
    "test:nous": "npx vitest run \"src/__tests__/nous/.*\\.test\\.[jt]sx?$\"",
    "test:coverage": "vitest run --coverage.enabled --coverage.provider=istanbul --coverage.reporter=text --coverage.reporter=json --coverage.reporter=html --coverage.reporter=lcov --coverage.reporter=cobertura --coverage.reportsDirectory=./coverage --coverage.clean=false --coverage.cleanOnRerun=false",
    "test:clear": "npx vitest --clearCache",
    "test:ci": "vitest run --coverage.enabled --coverage.provider=istanbul --coverage.reporter=text --coverage.reporter=json --coverage.reporter=html --coverage.reporter=lcov --coverage.reporter=cobertura --coverage.reportsDirectory=./coverage --coverage.clean=false --coverage.cleanOnRerun=false --reporter=default --reporter=junit",
    "test:types": "npx vitest run \"types/.*\\.test\\.[jt]sx?$\"",
    "test:utils": "npx vitest run \"utils/.*\\.test\\.[jt]sx?$\"",
    "test:shared": "npx vitest run \"shared/.*\\.test\\.[jt]sx?$\"",
    "test:api": "npx vitest run \"api/.*\\.test\\.[jt]sx?$\"",
    "test:watch:cortex": "npx vitest watch \"cortex/.*\\.test\\.[jt]sx?$\"",
    "test:watch:nous": "npx vitest watch \"nous/.*\\.test\\.[jt]sx?$\"",
    "test:changed": "npx vitest related --changed",
    "test:threading": "npx vitest run tests/services/nous/utils/threading.test.ts",
    "test-analyzer:prisma:generate": "cd mcp/test-analyzer && npx prisma generate --schema=../../prisma/test-analyzer.prisma",
    "test-analyzer:prisma:migrate:dev": "cd mcp/test-analyzer && npx prisma migrate dev --schema=../../prisma/test-analyzer.prisma",
    "test-analyzer:prisma:migrate:deploy": "cd mcp/test-analyzer && npx prisma migrate deploy --schema=../../prisma/test-analyzer.prisma",
    "test-analyzer:prisma:migrate:reset": "cd mcp/test-analyzer && npx prisma migrate reset --schema=../../prisma/test-analyzer.prisma --force",
    "test-analyzer:prisma:studio": "cd mcp/test-analyzer && npx prisma studio --schema=../../prisma/test-analyzer.prisma",
    "test-analyzer:prisma:setup": "cd mcp/test-analyzer && pnpm install && pnpm prisma:generate && pnpm prisma:migrate:dev",
    "test-analyzer:build": "cd mcp/test-analyzer && pnpm run build",
    "test-analyzer:start": "cd ./mcp/test-analyzer && pnpm start",
    "test-analyzer:dev": "cd ./mcp/test-analyzer && pnpm dev",
    "mcp:build": "cd mcp/test-analyzer && pnpm install && pnpm build",
    "mcp-analyze": "pnpm mcp:build && node mcp/test-analyzer/dist/cli.js",
    "mcp-analyze:interactive": "pnpm mcp:build && node mcp/test-analyzer/dist/cli.js -i",
    "mcp-analyze:coverage": "pnpm mcp:build && node mcp/test-analyzer/dist/cli.js -c",
    "mcp-analyze:watch": "pnpm mcp:build && node mcp/test-analyzer/dist/cli.js -i --watch",
    "mcp-analyze:test": "pnpm mcp:build && node mcp/test-analyzer/dist/cli.js -t",
    "test:analyze": "cd ./mcp/test-analyzer && pnpm cli",
    "test:analyze:debug": "cd ./mcp/test-analyzer && DEBUG=test-analyzer:* pnpm cli",
    "test:analyze:setup": "cd ./mcp/test-analyzer && pnpm prisma:migrate:dev",
    "test:analyze:migrate": "cd ./mcp/test-analyzer && pnpm prisma:migrate:deploy",
    "test:analyze:reset": "cd ./mcp/test-analyzer && pnpm prisma:migrate:reset",
    "test:analyze:coverage": "cd ./mcp/test-analyzcer && pnpm cli analyze --coverage fix --coverage generate --type=coverage",
    "test:analyze:patterns": "cd ./mcp/test-analyzer && pnpm cli analyze --patterns fix --patterns",
    "test:analyze:full": "cd ./mcp/test-analyzer && pnpm cli analyze fix generate report",
    "test:analyze:watch": "cd ./mcp/test-analyzer && pnpm cli watch analyze fix",
    "test:analyze:perf": "cd ./mcp/test-analyzer && pnpm cli analyze --performance fix",
    "postgenerate": "ts-node scripts/clean-zod-schemas.ts",
    "generate": "npx prisma generate && ts-node scripts/clean-zod-schemas.ts"
  },
  "prisma": {
    "seed": "ts-node prisma/tokenseed.ts"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.33.1",
    "@auth/prisma-adapter": "^2.7.4",
    "@elastic/elasticsearch": "^8.17.0",
    "@faker-js/faker": "^8.0.0",
    "@logtail/node": "^0.5.2",
    "@logtail/winston": "^0.5.2",
    "@paralleldrive/cuid2": "^2.2.2",
    "@types/bcryptjs": "^2.4.6",
    "bcryptjs": "^2.4.3",
    "chokidar": "^4.0.3",
    "cron": "^3.3.1",
    "cuid": "^3.0.0",
    "date-fns": "^2.30.0",
    "dotenv": "^16.4.5",
    "express": "^4.21.2",
    "fs": "0.0.1-security",
    "ioredis": "^5.4.1",
    "js-yaml": "^4.1.0",
    "json2csv": "6.0.0-alpha.2",
    "json5": "^2.2.3",
    "jsonwebtoken": "^9.0.2",
    "newrelic": "^10.6.2",
    "next": "^14.0.0",
    "next-auth": "^4.24.11",
    "openai": "^4.76.3",
    "prom-client": "^15.1.3",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "tailwindcss": "^3.4.17",
    "type-fest": "^4.30.2",
    "vitest": "^3.0.2",
    "vitest-mock-extended": "^2.0.2",
    "winston": "^3.17.0",
    "zod": "^3.24.1",
    "zod-prisma-types": "^2.7.9"
  },
  "devDependencies": {
    "@newrelic/native-metrics": "^9.0.0",
    "@prisma/client": "^6.1.0",
    "@testing-library/jest-dom": "^6.4.2",
    "@testing-library/react": "^16.2.0",
    "@types/express": "^5.0.0",
    "@types/glob": "^8.1.0",
    "@types/jest": "^29.5.12",
    "@types/js-yaml": "^4.0.9",
    "@types/json2csv": "^5.0.7",
    "@types/jsonwebtoken": "^9.0.7",
    "@types/newrelic": "^9.14.6",
    "@types/node": "^22.10.2",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "@vitest/coverage-istanbul": "^3.0.2",
    "@vitest/ui": "^3.0.2",
    "allure-commandline": "^2.24.1",
    "allure-js-commons": "^3.0.7",
    "c8": "^10.1.3",
    "cross-env": "^7.0.3",
    "eslint": "^8.57.1",
    "eslint-config-next": "^15.1.3",
    "eslint-config-prettier": "^9.0.0",
    "eslint-import-resolver-typescript": "^3.7.0",
    "glob": "^11.0.0",
    "husky": "^9.1.7",
    "install": "^0.13.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-fetch-mock": "^3.0.3",
    "jest-junit": "^16.0.0",
    "jest-mock-extended": "^4.0.0-beta1",
    "jest-silent-reporter": "^0.6.0",
    "jsdom": "^24.0.0",
    "mock-redis-client": "^0.91.13",
    "node-mocks-http": "^1.14.1",
    "postman-to-openapi": "^3.0.0",
    "prettier": "^3.4.2",
    "prisma": "^6.1.0",
    "rimraf": "^6.0.1",
    "ts-jest": "^29.1.2",
    "ts-morph": "^25.0.0",
    "ts-node": "^10.9.2",
    "typescript": "~5.3.3",
    "vite": "^6.0.7",
    "vitest": "^3.0.2"
  }
}
